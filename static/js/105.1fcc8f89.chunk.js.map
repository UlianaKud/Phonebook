{"version":3,"file":"static/js/105.1fcc8f89.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/Form/form.module.scss?1ee0","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Contacts/contact.module.scss?709e","components/Contacts/contact.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.scss?8942","components/Filter/filter.jsx","webpack://react-homework-template/./src/components/UserMenu/userMenu.module.scss?189b","components/UserMenu/UserMenu.jsx","webpack://react-homework-template/./src/components/Home/home.module.scss?4f1e","components/Home/Home.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const visibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter?.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__sP2jI\",\"label\":\"form_label__l9+qL\",\"input\":\"form_input__Hf2Sl\"};","import { useRef, useEffect } from 'react';\nimport { addContactsThunk } from 'redux/thunks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport Notiflix from 'notiflix';\nimport scss from './form.module.scss';\nimport InputMask from 'react-input-mask';\nimport { TextField, Button } from '@mui/material';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    const input = inputRef.current;\n    input.getSelection();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const form = e.target;\n\n    const normalizedname = form.elements.name.value.toLowerCase();\n\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedname)\n    ) {\n      Notiflix.Notify.warning(`${normalizedname} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      addContactsThunk({\n        name: form.elements.name.value,\n        number: form.elements.number.value,\n      })\n    );\n    inputRef.current.setInputValue('');\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={scss.form}>\n      <div className={scss.inputWrapper}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          required\n          inputProps={{\n            className: scss.input,\n            name: 'name',\n            pattern: '[A-Za-z]{1,32}',\n            title: 'Username must be one word',\n          }}\n        />\n        <span></span>\n      </div>\n      <div className={scss.inputWrapper}>\n        <InputMask\n          mask=\"+3\\8(999)9999999\"\n          maskChar=\" \"\n          ref={inputRef}\n        >\n          {() => (\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Number\"\n              variant=\"outlined\"\n              required\n              inputProps={{\n                className: scss.input,\n                name: 'number',\n                type: 'tel',\n                pattern: '[+]d{2}[(]d{3}[)]d{7}',\n                title:\n                  'Phone number must have format +38(050)1234567 and can start with +',\n              }}\n            />\n          )}\n        </InputMask>\n        <span></span>\n      </div>\n      <Button variant=\"outlined\" type=\"submit\">\n        Add Contact\n      </Button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contact_contactList__dhn8a\",\"contactAvatar\":\"contact_contactAvatar__Mr--B\",\"contactWrapper\":\"contact_contactWrapper__pklxl\",\"contactData\":\"contact_contactData__CaiV-\",\"button\":\"contact_button__-9f5R\"};","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  visibleContacts,\n  selectIsLoading,\n  selectError,\n} from '../../redux/selectors';\nimport { deleteContactsThunk, fetchContactsThunk } from 'redux/thunks';\nimport scss from './contact.module.scss';\nimport { setToken } from 'api/auth';\nimport { Avatar, Button, List, ListItem } from '@mui/material';\n\nconst Contact = () => {\n  const { token } = useSelector(state => ({\n    token: state.auth.token,\n  }));\n  const contacts = useSelector(visibleContacts);\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setToken(token);\n    dispatch(fetchContactsThunk());\n  }, [dispatch, token]);\n\n  const onDeleteContact = contactsId => {\n    dispatch(deleteContactsThunk(contactsId));\n  };\n\n  return (\n    <>\n      {loading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      <List className={scss.contactList}>\n        {contacts.map(({ id, name, number }) => {\n          return (\n            <ListItem key={`${number}-${name}`}>\n              <div className={scss.contactWrapper}>\n                <Avatar className={scss.contactAvatar} alt={name}>\n                  {name?.[0]?.toUpperCase()}\n                </Avatar>\n                <div className={scss.contactData}>\n                  <span className={scss.contactName}>{name}:</span>\n                  <span className={scss.number}>{number}</span>\n                </div>\n              </div>\n              <Button\n                variant=\"outlined\"\n                type=\"button\"\n                className={scss.button}\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </Button>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Contact;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__N-06B\",\"input\":\"filter_input__2kUfd\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { changeFilterFild } from '../../redux/filterSlice';\nimport scss from './filter.module.scss';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = evt => {\n    const { value } = evt.target;\n    dispatch(changeFilterFild(value));\n  };\n  return (\n    <TextField\n      id=\"outlined-basic\"\n      label=\"Find contact by name\"\n      variant=\"outlined\"\n      className={scss.input}\n      type=\"text\"\n      name=\"filter\"\n      onChange={handleChangeFilter}\n    />\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"userMenu_wrapper__JUNK0\",\"toolbar\":\"userMenu_toolbar__bhuk5\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { logOutThunk } from 'redux/thunks';\nimport { Navigate } from 'react-router-dom';\nimport scss from './userMenu.module.scss';\nimport { AppBar, Box, Typography, Toolbar, Button } from '@mui/material';\n\nconst UserMenu = () => {\n  const dispatch = useDispatch();\n\n  const {\n    isAuth,\n    user: { email },\n  } = useSelector(state => {\n    return {\n      isAuth: state.auth.token,\n      user: state.auth.user,\n    };\n  });\n\n  const handleLogOut = () => {\n    dispatch(logOutThunk());\n  };\n\n  if (!isAuth) {\n    return <Navigate to={'/login'} />;\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1 }} className={scss.wrapper}>\n      <AppBar position=\"static\">\n        <Toolbar className={scss.toolbar}>\n          {email ? (\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {`Hi, ${email}!`}\n            </Typography>\n          ) : `Hi!`}\n          <Button color=\"inherit\" onClick={handleLogOut}>\n            Log out\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default UserMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"home_wrapper__6SKAg\",\"phonebook\":\"home_phonebook__v2vMo\",\"contacts\":\"home_contacts__dSogV\"};","import Form from '../Form/Form';\nimport Contact from '../Contacts/contact';\nimport Filter from '../Filter/filter';\nimport UserMenu from '../UserMenu/UserMenu';\nimport scss from './home.module.scss';\nimport { Typography } from '@mui/material';\n\nconst Home = () => {\n  return (\n    <div className={scss.wrapper}>\n      <UserMenu />\n      <div className={scss.phonebook}>\n        <Typography\n          className={scss.headerPhonebook}\n          align=\"center\"\n          component=\"div\"\n          variant=\"h1\"\n        >\n          Phonebook\n        </Typography>\n        <Form />\n        <div className={scss.contacts}>\n          <Typography\n            className={scss.headerContacts}\n            align=\"center\"\n            component=\"div\"\n            variant=\"h2\"\n          >\n            Contacts\n          </Typography>\n          <Filter />\n          <Contact />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","visibleContacts","createSelector","filter","normalizedFilter","toLowerCase","contact","name","includes","dispatch","useDispatch","useSelector","inputRef","useRef","useEffect","current","getSelection","onSubmit","e","preventDefault","stopPropagation","form","target","normalizedname","elements","value","find","Notiflix","addContactsThunk","number","setInputValue","reset","className","scss","TextField","id","label","variant","required","inputProps","pattern","title","mask","maskChar","ref","type","Button","token","auth","loading","setToken","fetchContactsThunk","List","map","ListItem","Avatar","alt","toUpperCase","onClick","contactsId","deleteContactsThunk","onChange","evt","changeFilterFild","isAuth","user","email","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","component","color","logOutThunk","to","align"],"sourceRoot":""}